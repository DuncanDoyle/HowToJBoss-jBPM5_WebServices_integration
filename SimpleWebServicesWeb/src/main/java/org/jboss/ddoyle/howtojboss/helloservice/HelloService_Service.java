
/*
 * 
 */

package org.jboss.ddoyle.howtojboss.helloservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.12-patch-02
 * Mon Sep 17 23:31:48 CEST 2012
 * Generated source version: 2.2.12-patch-02
 * 
 */


@WebServiceClient(name = "HelloService", 
                  wsdlLocation = "file:/Users/mccloud/TestSetups/HowToJBoss-jBPM5_WebServices_integration/wsdl/HelloService/HelloService.wsdl",
                  targetNamespace = "http://www.jboss.org/ddoyle/howtojboss/HelloService/") 
public class HelloService_Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.jboss.org/ddoyle/howtojboss/HelloService/", "HelloService");
    public final static QName HelloServiceSOAP = new QName("http://www.jboss.org/ddoyle/howtojboss/HelloService/", "HelloServiceSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/mccloud/TestSetups/HowToJBoss-jBPM5_WebServices_integration/wsdl/HelloService/HelloService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/mccloud/TestSetups/HowToJBoss-jBPM5_WebServices_integration/wsdl/HelloService/HelloService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public HelloService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns HelloService
     */
    @WebEndpoint(name = "HelloServiceSOAP")
    public HelloService getHelloServiceSOAP() {
        return super.getPort(HelloServiceSOAP, HelloService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloService
     */
    @WebEndpoint(name = "HelloServiceSOAP")
    public HelloService getHelloServiceSOAP(WebServiceFeature... features) {
        return super.getPort(HelloServiceSOAP, HelloService.class, features);
    }

}
